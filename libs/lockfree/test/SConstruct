env = Environment()

opt = Options('options.cache')
opt.AddOptions(
    BoolOption('optimize', 'Build with build optimization', False),
    ('cxx', 'c++ compiler', None),
    ('arch', 'architecture', None),
    )

opt.Update(env)

opt.Save('options.cache',env)
Help(opt.GenerateHelpText(env))

if env.has_key('cxx'):
    env['CXX'] = env['cxx']

conf = env.Configure()
conf.CheckLib('pthread')
conf.Finish()

if env.get('optimize', False):
    env['CCFLAGS'] = Split("-O3 -g")
else:
    env['CCFLAGS'] = ["-g"]

if env.has_key('arch'):
    env.Append(CCFLAGS = "-march="+env['arch'])

env.Append(CPPPATH=["#../../.."])

libboost = env.StaticLibrary("boost_thread", ["../../thread/src/"+x for x in Split("""
tss_null.cpp pthread/exceptions.cpp pthread/once.cpp pthread/thread.cpp
""")])

env.Append(LIBS=libboost)


testsuite = [
    env.Program("cas_test", "cas_test.cpp"),
    env.Program("fifo_test", "fifo_test.cpp"),
    env.Program("freelist_test", "freelist_test.cpp"),
    env.Program("tagged_ptr_test", "tagged_ptr_test.cpp"),
    env.Program("stack_test", "stack_test.cpp"),
    ]

Default(testsuite)
